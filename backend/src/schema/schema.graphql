type FeatureFlag {
  id: ID!
  userId: ID!
  flagKey: String!
  flagValue: String!
}

type User {
  id: ID!
  givenName: String!
  familyName: String!
  email: String!
  featureFlags: [FeatureFlag!]
}

input FeatureFlagData {
  key: String!
  value: String!
}

type UpdateResponse {
  success: Boolean!
}

type Mutation {
  setUserFeatureFlag(userId: Int!, flagData: FeatureFlagData!): UpdateResponse
  setFeatureFlag(userIds: [Int!]!, flagData: FeatureFlagData!): UpdateResponse
}

type Query {
  hello: String!
  getAllUsers: [User!]!
}
